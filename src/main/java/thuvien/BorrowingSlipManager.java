package thuvien;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.*;

public class BorrowingSlipManager {
    private static final List<BorrowingSlip> slips = new ArrayList<>();
    private static final Scanner scanner = new Scanner(System.in);
    private static final SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

    public static void main(String[] args) throws ParseException {
        while (true) {
            System.out.println("\n--- QU·∫¢N L√ù PHI·∫æU M∆Ø·ª¢N (CRUD) ---");
            System.out.println("1. Th√™m phi·∫øu m∆∞·ª£n");
            System.out.println("2. Xem danh s√°ch phi·∫øu m∆∞·ª£n");
            System.out.println("3. S·ª≠a phi·∫øu m∆∞·ª£n");
            System.out.println("4. Xo√° phi·∫øu m∆∞·ª£n");
            System.out.println("5. Tho√°t");
            System.out.print("Ch·ªçn ch·ª©c nƒÉng: ");
            int chon = Integer.parseInt(scanner.nextLine());

            switch (chon) {
                case 1 -> createSlip();
                case 2 -> readSlips();
                case 3 -> updateSlip();
                case 4 -> deleteSlip();
                case 5 -> System.exit(0);
                default -> System.out.println("L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!");
            }
        }
    }

    private static void createSlip() throws ParseException {
        System.out.print("Nh·∫≠p m√£ phi·∫øu: ");
        String slipID = scanner.nextLine();

        System.out.print("Nh·∫≠p t√™n ng∆∞·ªùi m∆∞·ª£n: ");
        String name = scanner.nextLine();
        System.out.print("Nh·∫≠p m√£ ng∆∞·ªùi m∆∞·ª£n: ");
        String borrowerID = scanner.nextLine();

        System.out.print("Nh·∫≠p t√™n s√°ch: ");
        String title = scanner.nextLine();
        System.out.print("Nh·∫≠p m√£ s√°ch: ");
        String bookID = scanner.nextLine();

        System.out.print("Nh·∫≠p ng√†y m∆∞·ª£n (dd/MM/yyyy): ");
        Date borrowDate = sdf.parse(scanner.nextLine());
        System.out.print("Nh·∫≠p h·∫°n tr·∫£ (dd/MM/yyyy): ");
        Date dueDate = sdf.parse(scanner.nextLine());

        Borrower borrower = new Borrower(borrowerID, name);
        Book book = new Book(bookID, title);
        BorrowingSlip slip = new BorrowingSlip(slipID, borrower, book, borrowDate, dueDate);
        slips.add(slip);
        System.out.println("‚úÖ ƒê√£ th√™m phi·∫øu m∆∞·ª£n.");
    }

    private static void readSlips() {
        if (slips.isEmpty()) {
            System.out.println("‚ö†Ô∏è Danh s√°ch phi·∫øu m∆∞·ª£n tr·ªëng.");
        } else {
            System.out.println("üìÑ Danh s√°ch phi·∫øu m∆∞·ª£n:");
            for (BorrowingSlip slip : slips) {
                System.out.println(slip);
            }
        }
    }

    private static void updateSlip() throws ParseException {
        System.out.print("Nh·∫≠p m√£ phi·∫øu c·∫ßn s·ª≠a: ");
        String slipID = scanner.nextLine();

        for (int i = 0; i < slips.size(); i++) {
            if (slips.get(i).getSlipID().equals(slipID)) {
                System.out.print("Nh·∫≠p t√™n m·ªõi ng∆∞·ªùi m∆∞·ª£n: ");
                String newName = scanner.nextLine();
                System.out.print("Nh·∫≠p m√£ m·ªõi ng∆∞·ªùi m∆∞·ª£n: ");
                String newBorrowerID = scanner.nextLine();

                System.out.print("Nh·∫≠p t√™n m·ªõi s√°ch: ");
                String newTitle = scanner.nextLine();
                System.out.print("Nh·∫≠p m√£ m·ªõi s√°ch: ");
                String newBookID = scanner.nextLine();

                System.out.print("Nh·∫≠p ng√†y m∆∞·ª£n m·ªõi (dd/MM/yyyy): ");
                Date newBorrowDate = sdf.parse(scanner.nextLine());
                System.out.print("Nh·∫≠p h·∫°n tr·∫£ m·ªõi (dd/MM/yyyy): ");
                Date newDueDate = sdf.parse(scanner.nextLine());

                Borrower borrower = new Borrower(newBorrowerID, newName);
                Book book = new Book(newBookID, newTitle);
                BorrowingSlip newSlip = new BorrowingSlip(slipID, borrower, book, newBorrowDate, newDueDate);

                slips.set(i, newSlip);
                System.out.println("‚úÖ ƒê√£ c·∫≠p nh·∫≠t phi·∫øu m∆∞·ª£n.");
                return;
            }
        }
        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y m√£ phi·∫øu.");
    }

    private static void deleteSlip() {
        System.out.print("Nh·∫≠p m√£ phi·∫øu c·∫ßn xo√°: ");
        String slipID = scanner.nextLine();
        Iterator<BorrowingSlip> iterator = slips.iterator();
        while (iterator.hasNext()) {
            BorrowingSlip slip = iterator.next();
            if (slip.getSlipID().equals(slipID)) {
                iterator.remove();
                System.out.println("‚úÖ ƒê√£ xo√° phi·∫øu m∆∞·ª£n.");
                return;
            }
        }
        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y m√£ phi·∫øu.");
    }
}
