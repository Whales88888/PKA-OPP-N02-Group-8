package thuvien;

import java.util.*;

public class BorrowerManager {
    private static final List<Borrower> borrowerList = new ArrayList<>();
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("\n------ MENU QU·∫¢N L√ù NG∆Ø·ªúI M∆Ø·ª¢N ------");
            System.out.println("1. Th√™m ng∆∞·ªùi m∆∞·ª£n (CREATE)");
            System.out.println("2. Xem danh s√°ch ng∆∞·ªùi m∆∞·ª£n (READ)");
            System.out.println("3. S·ª≠a th√¥ng tin ng∆∞·ªùi m∆∞·ª£n (UPDATE)");
            System.out.println("4. Xo√° ng∆∞·ªùi m∆∞·ª£n (DELETE)");
            System.out.println("0. Tho√°t");
            System.out.print("Ch·ªçn ch·ª©c nƒÉng: ");
            int choice;
            try {
                choice = Integer.parseInt(scanner.nextLine());
            } catch (NumberFormatException e) {
                System.out.println("‚ùå Vui l√≤ng nh·∫≠p s·ªë h·ª£p l·ªá.");
                continue;
            }

            switch (choice) {
                case 1 -> createBorrower();
                case 2 -> readBorrowers();
                case 3 -> updateBorrower();
                case 4 -> deleteBorrower();
                case 0 -> {
                    System.out.println("üìö Tho√°t ch∆∞∆°ng tr√¨nh qu·∫£n l√Ω ng∆∞·ªùi m∆∞·ª£n.");
                    return;
                }
                default -> System.out.println("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.");
            }
        }
    }

    // CREATE
    private static void createBorrower() {
        System.out.print("Nh·∫≠p m√£ ng∆∞·ªùi m∆∞·ª£n: ");
        String borrowerID = scanner.nextLine();

        System.out.print("Nh·∫≠p t√™n ng∆∞·ªùi m∆∞·ª£n: ");
        String borrowerName = scanner.nextLine();

        System.out.print("Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i (c√≥ th·ªÉ b·ªè qua): ");
        String phoneNumber = scanner.nextLine();

        Borrower borrower = new Borrower(borrowerID, borrowerName, phoneNumber);
        borrowerList.add(borrower);
        System.out.println("‚úÖ Th√™m ng∆∞·ªùi m∆∞·ª£n th√†nh c√¥ng.");
    }

    // READ
    private static void readBorrowers() {
        if (borrowerList.isEmpty()) {
            System.out.println("üì≠ Kh√¥ng c√≥ ng∆∞·ªùi m∆∞·ª£n n√†o trong danh s√°ch.");
            return;
        }

        System.out.println("\nüìñ DANH S√ÅCH NG∆Ø·ªúI M∆Ø·ª¢N:");
        for (Borrower borrower : borrowerList) {
            System.out.println(borrower);
        }
    }

    // UPDATE
    private static void updateBorrower() {
        System.out.print("Nh·∫≠p m√£ ng∆∞·ªùi m∆∞·ª£n c·∫ßn s·ª≠a: ");
        String borrowerID = scanner.nextLine();

        for (Borrower borrower : borrowerList) {
            if (borrower.getBorrowerID().equals(borrowerID)) {
                System.out.print("Nh·∫≠p t√™n ng∆∞·ªùi m∆∞·ª£n m·ªõi: ");
                String newName = scanner.nextLine();
                borrower.setBorrowerName(newName);

                System.out.print("Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i m·ªõi: ");
                String newPhone = scanner.nextLine();
                borrower.setPhoneNumber(newPhone);

                System.out.println("‚úÖ C·∫≠p nh·∫≠t ng∆∞·ªùi m∆∞·ª£n th√†nh c√¥ng.");
                return;
            }
        }

        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi m∆∞·ª£n v·ªõi m√£ ƒë√£ nh·∫≠p.");
    }

    // DELETE
    private static void deleteBorrower() {
        System.out.print("Nh·∫≠p m√£ ng∆∞·ªùi m∆∞·ª£n c·∫ßn xo√°: ");
        String borrowerID = scanner.nextLine();

        Iterator<Borrower> iterator = borrowerList.iterator();
        while (iterator.hasNext()) {
            Borrower borrower = iterator.next();
            if (borrower.getBorrowerID().equals(borrowerID)) {
                iterator.remove();
                System.out.println("üóëÔ∏è Xo√° ng∆∞·ªùi m∆∞·ª£n th√†nh c√¥ng.");
                return;
            }
        }

        System.out.println("‚ùå Kh√¥ng t√¨m th·∫•y ng∆∞·ªùi m∆∞·ª£n ƒë·ªÉ xo√°.");
    }
}