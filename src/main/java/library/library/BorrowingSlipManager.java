package library;

import java.util.Scanner;
import java.util.Date;
import java.util.Calendar;

public class BorrowingSlipManager {
    private static final CrudManager<BorrowingSlip> crud = new CrudManager<>("slips.dat");
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        while (true) {
            System.out.println("\n------ MENU QU·∫¢N L√ù PHI·∫æU M∆Ø·ª¢N ------");
            System.out.println("1. Th√™m phi·∫øu m∆∞·ª£n");
            System.out.println("2. Xem danh s√°ch phi·∫øu m∆∞·ª£n");
            System.out.println("3. Xo√° phi·∫øu m∆∞·ª£n");
            System.out.println("4. L∆∞u file");
            System.out.println("0. Tho√°t");
            System.out.print("Ch·ªçn ch·ª©c nƒÉng: ");

            try {
                int choice = Integer.parseInt(scanner.nextLine());
                switch (choice) {
                    case 1:
                        try {
                            System.out.print("Nh·∫≠p m√£ phi·∫øu m∆∞·ª£n: ");
                            String slipID = scanner.nextLine();

                            System.out.print("Nh·∫≠p m√£ ng∆∞·ªùi m∆∞·ª£n: ");
                            String borrowerID = scanner.nextLine();
                            System.out.print("Nh·∫≠p t√™n ng∆∞·ªùi m∆∞·ª£n: ");
                            String borrowerName = scanner.nextLine();
                            System.out.print("Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i: ");
                            String phone = scanner.nextLine();
                            Borrower borrower = new Borrower(borrowerID, borrowerName, phone);

                            System.out.print("Nh·∫≠p m√£ s√°ch: ");
                            String bookID = scanner.nextLine();
                            System.out.print("Nh·∫≠p t√™n s√°ch: ");
                            String bookName = scanner.nextLine();
                            System.out.print("Nh·∫≠p t√°c gi·∫£: ");
                            String author = scanner.nextLine();
                            Book book = new Book(bookID, bookName, author);

                            Date borrowDate = new Date();
                            Calendar cal = Calendar.getInstance();
                            cal.setTime(borrowDate);
                            cal.add(Calendar.DAY_OF_MONTH, 7);
                            Date dueDate = cal.getTime();

                            BorrowingSlip slip = new BorrowingSlip(slipID, borrower, book, borrowDate, dueDate);
                            crud.add(slip);
                            System.out.println("‚úÖ Th√™m phi·∫øu m∆∞·ª£n th√†nh c√¥ng.");
                        } catch (Exception e) {
                            System.err.println("‚ùå L·ªói khi th√™m phi·∫øu m∆∞·ª£n: " + e.getMessage());
                        } finally {
                            System.out.println("Ho√†n t·∫•t x·ª≠ l√Ω ch·ª©c nƒÉng th√™m phi·∫øu m∆∞·ª£n.");
                        }
                        break;

                    case 2:
                        try {
                            int i = 0;
                            for (BorrowingSlip s : crud.getAll()) {
                                System.out.println((i++) + ": " + s);
                            }
                            if (i == 0) {
                                System.out.println("üì≠ Danh s√°ch phi·∫øu m∆∞·ª£n tr·ªëng.");
                            }
                        } catch (Exception e) {
                            System.err.println("‚ùå L·ªói khi xem danh s√°ch: " + e.getMessage());
                        } finally {
                            System.out.println("Ho√†n t·∫•t x·ª≠ l√Ω ch·ª©c nƒÉng xem danh s√°ch.");
                        }
                        break;

                    case 3:
                        try {
                            System.out.print("Nh·∫≠p v·ªã tr√≠ phi·∫øu m∆∞·ª£n c·∫ßn xo√°: ");
                            int idx = Integer.parseInt(scanner.nextLine());
                            crud.remove(idx);
                            System.out.println("üóëÔ∏è ƒê√£ xo√° phi·∫øu m∆∞·ª£n t·∫°i v·ªã tr√≠ " + idx);
                        } catch (Exception e) {
                            System.err.println("‚ùå L·ªói khi xo√° phi·∫øu m∆∞·ª£n: " + e.getMessage());
                        } finally {
                            System.out.println("Ho√†n t·∫•t x·ª≠ l√Ω ch·ª©c nƒÉng xo√° phi·∫øu m∆∞·ª£n.");
                        }
                        break;

                    case 4:
                        try {
                            crud.save();
                            System.out.println("üíæ ƒê√£ l∆∞u d·ªØ li·ªáu v√†o file.");
                        } catch (Exception e) {
                            System.err.println("‚ùå L·ªói khi l∆∞u file: " + e.getMessage());
                        } finally {
                            System.out.println("Ho√†n t·∫•t x·ª≠ l√Ω ch·ª©c nƒÉng l∆∞u file.");
                        }
                        break;

                    case 0:
                        try {
                            crud.save();
                            System.out.println("üëã T·∫°m bi·ªát!");
                        } catch (Exception e) {
                            System.err.println("‚ùå L·ªói khi tho√°t v√† l∆∞u file: " + e.getMessage());
                        } finally {
                            System.out.println("Ch∆∞∆°ng tr√¨nh k·∫øt th√∫c.");
                        }
                        return;

                    default:
                        System.out.println("‚ö†Ô∏è L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá.");
                        break;
                }
            } catch (NumberFormatException e) {
                System.err.println("‚ùå B·∫°n ph·∫£i nh·∫≠p m·ªôt s·ªë nguy√™n.");
            }
        }
    }
}
